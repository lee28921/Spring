#####################################
#기본 Setting
#####################################
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false
server.servlet.context-path=/Ch08


#####################################
# DataSource 설정
#####################################
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/userdb
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver

#####################################
# JPA 설정
# ddl-auto=create : 엔티티를 기준으로 기존 테이블 삭제 후 다시 생성
# ddl-auto=update : 엔티티를 기준으로 기존 테이블 수정(개발용) <= naming.physical-strategy 설정해야 대소문자 구분
# ddl-auto=none : 엔티티를 기준으로 그어떤 테이블 생성하지 않음(운영용)
#####################################
spring.jpa.database=mysql
spring.jpa.properties.hibernate.show_spl=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.ddl-auto=update

#####################################
# logging 설정
#####################################
logging.level.root=info
logging.level.jdbc.sqlonly=info
logging.level.jdbc.sqltiming=info
logging.level.jdbc.connection=info
logging.level.jdbc.resultsettable=info
logging.level.jdbc.hibernate=info
logging.level.jdbc.springframework.security=info
logging.level.org.hibernate.SQL=info
logging.file.name=log/Ch08.log
